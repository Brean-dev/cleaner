name: Rust Build - Linux

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for this build'
        required: true
        default: 'v0.1.0'

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Install Linux dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential

    - name: Build
      run: cargo build --verbose

    - name: Run tests
      run: cargo test --verbose

    - name: Check formatting
      run: cargo fmt -- --check

    - name: Run clippy
      run: cargo clippy -- -D warnings

    - name: Tag this build
      if: github.event.inputs.tag != ''
      uses: actions/github-script@v6
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const tag = '${{ github.event.inputs.tag }}';
          const message = 'Release ' + tag;

          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/${tag}`,
            sha: context.sha
          }).catch(error => {
            console.log(`Error creating tag: ${error.message}`);
            if (error.message.includes('Reference already exists')) {
              console.log('Tag already exists, continuing...');
              return;
            }
            throw error;
          });
